{"version":3,"sources":["components/appHeader/AppHeader.js","components/spinner/Spinner.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","services/MarvelService.js","resources/img/mjolnir.png","components/randomCharacter/RandomCharacter.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","resources/img/vision.png","components/app/App.js","index.js"],"names":["AppHeader","_jsxs","className","children","_jsx","href","Spinner","xmlns","style","margin","background","display","width","height","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","ErrorMessage","objectFit","src","img","alt","MarvelService","constructor","_this","_apiBase","_apiKey","_baseOffset","getResource","async","res","fetch","url","ok","Error","concat","status","json","getAllCharacters","offset","arguments","length","undefined","data","results","map","_transformCharacter","getCharacter","this","id","character","description","slice","name","thumbnail","path","extension","homepage","urls","wiki","comics","items","RandomCharacter","Component","state","loading","error","marvelService","onCharacterLoaded","setState","onError","onCharacterLoading","updateCharacter","Math","floor","random","then","catch","componentDidMount","render","errorMessage","spinner","content","View","onClick","mjolnir","props","imgStyle","CharList","super","newItemLoading","characterEnded","onRequest","onCharacterListLoading","newCharacter","ended","prevState","styleToSelectedCharacter","ref","itemRefs","forEach","itemRef","current","classList","remove","add","renderItemsCharacter","arr","item","selectedRef","React","createRef","push","onCharacterSelected","disabled","Skeleton","_Fragment","CharInfo","characterId","componentDidUpdate","prevProps","skeleton","value","index","App","selectedCharacter","decoration","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.703aa2d5.chunk.js","sourcesContent":["import './appHeader.scss'\n\nconst AppHeader = () => {\n    return (\n        <header className=\"app__header\">\n            <h1 className=\"app__title\">\n                <a href=\"/characters\">\n                    <span>Marvel</span> information portal\n                </a>\n            </h1>\n            <nav className=\"app__menu\">\n                <ul>\n                    <li>\n                        <a href=\"/characters\">Characters</a>\n                    </li>\n                    /\n                    <li>\n                        <a href=\"/comics\">Comics</a>\n                    </li>\n                </ul>\n            </nav>\n        </header>\n    )\n}\n\nexport default AppHeader\n","const Spinner = () => {\n    return (\n        <svg xmlns=\"http://www.w3.org/2000/svg\" style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n            <g transform=\"translate(80,50)\">\n            <g transform=\"rotate(0)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.875s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,71.21320343559643)\">\n            <g transform=\"rotate(45)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.75s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(50,80)\">\n            <g transform=\"rotate(90)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.625s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.786796564403577,71.21320343559643)\">\n            <g transform=\"rotate(135)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.5s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(20,50.00000000000001)\">\n            <g transform=\"rotate(180)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.375s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(28.78679656440357,28.786796564403577)\">\n            <g transform=\"rotate(225)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.25s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(49.99999999999999,20)\">\n            <g transform=\"rotate(270)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"-0.125s\"></animate>\n            </circle>\n            </g>\n            </g><g transform=\"translate(71.21320343559643,28.78679656440357)\">\n            <g transform=\"rotate(315)\">\n            <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\" values=\"1;0\" begin=\"0s\"></animate>\n            </circle>\n            </g>\n            </g>\n        </svg>\n    )\n}\n\nexport default Spinner;","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif';\n\nconst ErrorMessage = () => {\n    return (\n        <img style={{ display: 'block', width: \"250px\", height: \"250px\",objectFit: 'contain', margin: \"0 auto\"}}  src={img} alt=\"Error\"/>\n    )\n}\n\nexport default ErrorMessage;","class MarvelService {\n    _apiBase = 'https://gateway.marvel.com:443/v1/public/'\n    // _apiKey = 'apikey=5ef8f994504e4cd5b226744fbc38f8ba'\n    _apiKey = 'apikey=5c038bd6ce84d9ec6fa43f3dab859913'\n\n    _baseOffset = 210\n\n    getResource = async (url) => {\n        let res = await fetch(url)\n\n        if (!res.ok) {\n            throw new Error(`Could not fetch ${url}, status: ${res.status}`)\n        }\n\n        return await res.json()\n    }\n\n    getAllCharacters = async (offset = this._baseOffset) => {\n        const res = await this.getResource(`${this._apiBase}characters?limit=9&offset=${offset}&${this._apiKey}`)\n        return res.data.results.map(this._transformCharacter)\n    }\n\n    getCharacter = async (id) => {\n        const res = await this.getResource(`${this._apiBase}characters/${id}?${this._apiKey}`)\n        const character = this._transformCharacter(res.data.results[0])\n\n        if (character.description.length === 0) {\n            character.description = 'The hero is really cool, but not Deadpool :) lol'\n        }\n        if (character.description.length >= 200) {\n            character.description = `${character.description.slice(0, 180)}...And Bla-bla-bla, Deadpool is better.`\n        }\n\n\n        return character\n    }\n\n    _transformCharacter = (character) => {\n        return {\n            id: character.id,\n            name: character.name,\n            description: character.description,\n            thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n            homepage: character.urls[0].url,\n            wiki: character.urls[1].url,\n            comics: character.comics.items,\n        }\n    }\n}\n\nexport default MarvelService\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import React, { Component } from 'react'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport MarvelService from '../../services/MarvelService'\n\nimport './RandomCharacter.scss'\nimport mjolnir from '../../resources/img/mjolnir.png'\n\nclass RandomCharacter extends Component {\n    componentDidMount() {\n        this.updateCharacter()\n    }\n\n    state = {\n        character: {},\n        loading: true,\n        error: false,\n    }\n\n    marvelService = new MarvelService()\n\n    onCharacterLoaded = (character) => {\n        this.setState({ character: character, loading: false })\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true })\n    }\n\n    onCharacterLoading = () => {\n        this.setState({ loading: true })\n    }\n\n    updateCharacter = () => {\n        const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n        this.onCharacterLoading()\n        this.marvelService.getCharacter(id).then(this.onCharacterLoaded).catch(this.onError)\n    }\n\n    render() {\n        const errorMessage = this.state.error ? <ErrorMessage /> : null\n        const spinner = this.state.loading ? <Spinner /> : null\n        const content = !(this.state.loading || this.state.error) ? <View character={this.state.character} /> : null\n\n        return (\n            <div className=\"randomchar\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <div className=\"randomchar__static\">\n                    <p className=\"randomchar__title\">\n                        Random character for today!\n                        <br />\n                        Do you want to get to know him better?\n                    </p>\n                    <p className=\"randomchar__title\">Or choose another one</p>\n                    <button className=\"button button__main\" onClick={this.updateCharacter}>\n                        <div className=\"inner\">try it</div>\n                    </button>\n                    <img src={mjolnir} alt=\"mjolnir\" className=\"randomchar__decoration\" />\n                </div>\n            </div>\n        )\n    }\n}\n\nconst View = (props) => {\n    let imgStyle = { objectFit: 'cover' }\n    if (props.character.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { objectFit: 'contain' }\n    }\n    return (\n        <div className=\"randomchar__block\">\n            <img src={props.character.thumbnail} alt=\"Random character\" className=\"randomchar__img\" style={imgStyle} />\n            <div className=\"randomchar__info\">\n                <p className=\"randomchar__name\">{props.character.name}</p>\n                <p className=\"randomchar__descr\">{props.character.description}</p>\n                <div className=\"randomchar__btns\">\n                    <a href={props.character.homepage} className=\"button button__main\">\n                        <div className=\"inner\">homepage</div>\n                    </a>\n                    <a href={props.character.wiki} className=\"button button__secondary\">\n                        <div className=\"inner\">Wiki</div>\n                    </a>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default RandomCharacter\n","import React, { Component } from 'react'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport MarvelService from '../../services/MarvelService'\n\nimport './charList.scss'\n\nclass CharList extends Component {\n    constructor(props) {\n        super(props)\n        this.itemRefs = []\n    }\n    state = {\n        character: [],\n        loading: true,\n        error: false,\n        newItemLoading: false,\n        offset: 210,\n        characterEnded: false,\n    }\n\n    marvelService = new MarvelService()\n\n    componentDidMount() {\n        this.onRequest()\n    }\n\n    onRequest = (offset) => {\n        this.onCharacterListLoading()\n        this.marvelService.getAllCharacters(offset).then(this.onCharacterLoaded).catch(this.onError)\n    }\n\n    onCharacterListLoading = () => {\n        this.setState({ newItemLoading: true })\n    }\n\n    onCharacterLoaded = (newCharacter) => {\n        let ended = false\n        if (newCharacter.length < 9) {\n            ended = true\n        }\n        this.setState((prevState) => ({\n            character: [...prevState.character, ...newCharacter],\n            loading: false,\n            newItemLoading: false,\n            offset: prevState.offset + 9,\n            characterEnded: ended,\n        }))\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true })\n    }\n\n    styleToSelectedCharacter = (ref) => {\n        this.itemRefs.forEach((itemRef) => {\n            if (itemRef.current) {\n                itemRef.current.classList.remove('char__item__selected')\n            }\n        })\n        if (ref.current) {\n            ref.current.classList.add('char__item__selected')\n        }\n    }\n\n    renderItemsCharacter(arr) {\n        const items = arr.map((item) => {\n            let imgStyle = { objectFit: 'cover' }\n            if (item.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n                imgStyle = { objectFit: 'unset' }\n            }\n            const selectedRef = React.createRef()\n            this.itemRefs.push(selectedRef)\n            return (\n                <li\n                    ref={selectedRef}\n                    className=\"char__item\"\n                    key={item.id}\n                    onClick={() => {\n                        this.props.onCharacterSelected(item.id)\n                        this.styleToSelectedCharacter(selectedRef)\n                    }}\n                >\n                    <img src={item.thumbnail} alt={item.name} style={imgStyle} />\n                    <div className=\"char__name\">{item.name}</div>\n                </li>\n            )\n        })\n        return <ul className=\"char__grid\">{items}</ul>\n    }\n\n    render() {\n        const items = this.renderItemsCharacter(this.state.character)\n        const errorMessage = this.state.error ? <ErrorMessage /> : null\n        const spinner = this.state.loading ? <Spinner /> : null\n        const content = !(this.state.loading || this.state.error) ? items : null\n\n        return (\n            <div className=\"char__list\">\n                {errorMessage}\n                {spinner}\n                {content}\n                <button\n                    className=\"button button__main button__long\"\n                    disabled={this.state.newItemLoading}\n                    onClick={() => this.onRequest(this.state.offset)}\n                    style={{ display: this.state.characterEnded ? 'none' : 'block' }}\n                >\n                    <div className=\"inner\">load more</div>\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default CharList\n","import './skeleton.scss';\n\nconst Skeleton = () => {\n    return (\n        <>\n            <p className=\"char__select\">Please select a character to see information</p>\n            <div className=\"skeleton\">\n                <div className=\"pulse skeleton__header\">\n                    <div className=\"pulse skeleton__circle\"></div>\n                    <div className=\"pulse skeleton__mini\"></div>\n                </div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n                <div className=\"pulse skeleton__block\"></div>\n            </div>\n        </>\n    )\n}\n\nexport default Skeleton;","import React, { Component } from 'react'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\nimport MarvelService from '../../services/MarvelService'\n\nimport './charInfo.scss'\n\nclass CharInfo extends Component {\n    state = {\n        character: null,\n        loading: false,\n        error: false,\n    }\n\n    componentDidMount() {\n        this.updateCharacter()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (this.props.characterId !== prevProps.characterId) {\n            this.updateCharacter()\n        }\n    }\n\n    marvelService = new MarvelService()\n    onCharacterLoaded = (character) => {\n        this.setState({ character: character, loading: false })\n    }\n\n    onError = () => {\n        this.setState({ loading: false, error: true })\n    }\n\n    onCharacterLoading = () => {\n        this.setState({ loading: true })\n    }\n\n    updateCharacter = () => {\n        this.onCharacterLoaded()\n        if (!this.props.characterId) {\n            return\n        }\n\n        this.marvelService.getCharacter(this.props.characterId).then(this.onCharacterLoaded).catch(this.onError)\n    }\n\n    render() {\n        const errorMessage = this.state.error ? <ErrorMessage /> : null\n        const spinner = this.state.loading ? <Spinner /> : null\n        const content = !(this.state.loading || this.state.error || !this.state.character) ? <View character={this.state.character} /> : null\n\n        const skeleton = this.state.character || this.state.loading || this.state.error ? null : <Skeleton />\n\n        return (\n            <div className=\"char__info\">\n                {errorMessage}\n                {spinner} \n                {content}\n                {skeleton}\n            </div>\n        )\n    }\n}\n\nconst View = (props) => {\n    let imgStyle = { objectFit: 'cover' }\n    if (props.character.thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg') {\n        imgStyle = { objectFit: 'contain' }\n    }\n\n    return (\n        <>\n            <div className=\"char__basics\">\n                <img src={props.character.thumbnail} alt={props.character.name} style={imgStyle} />\n                <div>\n                    <div className=\"char__info-name\"> {props.character.name}</div>\n                    <div className=\"char__btns\">\n                        <a href={props.character.homepage} className=\"button button__main\">\n                            <div className=\"inner\">Homepage</div>\n                        </a>\n                        <a href={props.character.wiki} className=\"button button__secondary\">\n                            <div className=\"inner\">Wiki</div>\n                        </a>\n                    </div>\n                </div>\n            </div>\n\n            <div className=\"char__descr\">{props.character.description}</div>\n\n            <div className=\"char__comics\">Comics:</div>\n            <ul className=\"char__comics-list\">\n                {props.character.comics.length === 0 ? (\n                    <li className=\"char__comics-item\">\n                        This character doesn't have comics. <br /> Zero Carl, zero comics Caaarl.\n                    </li>\n                ) : (\n                    props.character.comics.slice(0, 11).map((value, index) => {\n                        return (\n                            <li key={index} className=\"char__comics-item\">\n                                {value.name}\n                            </li>\n                        )\n                    })\n                )}\n            </ul>\n        </>\n    )\n}\n\nexport default CharInfo\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import React, { Component } from 'react'\nimport AppHeader from '../appHeader/AppHeader'\nimport RandomCharacter from '../randomCharacter/RandomCharacter'\nimport CharList from '../charList/CharList'\nimport CharInfo from '../charInfo/CharInfo'\n\nimport decoration from '../../resources/img/vision.png'\n\nclass App extends Component {\n    state = {\n        selectedCharacter: null,\n    }\n\n    onCharacterSelected = (id) => {\n        this.setState({\n            selectedCharacter: id,\n        })\n    }\n\n    render() {\n        return (\n            <div className=\"app\">\n                <AppHeader />\n                <main>\n                    <RandomCharacter />\n                    <div className=\"char__content\">\n                        <CharList onCharacterSelected={this.onCharacterSelected} />\n                        <CharInfo characterId={this.state.selectedCharacter}/>\n                    </div>\n                    <img className=\"bg-decoration\" src={decoration} alt=\"vision\" />\n                </main>\n            </div>\n        )\n    }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/app/App'\nimport './style/style.scss'\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n)\n"],"sourceRoot":""}